{"version":3,"sources":["transfer/renderListBody.jsx"],"names":["React","Animate","raf","tuple","ListItem","OmitProps","ListBody","arguments","state","mounted","onItemSelect","item","props","selectedKeys","checked","indexOf","key","mountId","setState","cancel","prefixCls","onScroll","filteredRenderItems","lazy","map","renderedEl","renderedText","disabled","Component"],"mappings":";;;;;;;;;;;;;;;;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAOC,OAAP,MAAoB,YAApB;AACA,OAAOC,GAAP,MAAgB,cAAhB;AACA,SAASC,KAAT,QAAsB,eAAtB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAO,IAAMC,SAAS,GAAGF,KAAK,CAAC,cAAD,EAAiB,cAAjB,EAAiC,iBAAjC,EAAoD,aAApD,EAAmE,MAAnE,EAA2E,aAA3E,CAAvB;;IACDG,Q;;;;;AACF,sBAAc;AAAA;;AAAA;;AACV,mFAASC,SAAT;AACA,UAAKC,KAAL,GAAa;AACTC,MAAAA,OAAO,EAAE;AADA,KAAb;;AAGA,UAAKC,YAAL,GAAoB,UAACC,IAAD,EAAU;AAAA,wBACa,MAAKC,KADlB;AAAA,UAClBF,YADkB,eAClBA,YADkB;AAAA,UACJG,YADI,eACJA,YADI;AAE1B,UAAMC,OAAO,GAAGD,YAAY,CAACE,OAAb,CAAqBJ,IAAI,CAACK,GAA1B,KAAkC,CAAlD;AACAN,MAAAA,YAAY,CAACC,IAAI,CAACK,GAAN,EAAW,CAACF,OAAZ,CAAZ;AACH,KAJD;;AALU;AAUb;;;;wCACmB;AAAA;;AAChB,WAAKG,OAAL,GAAef,GAAG,CAAC,YAAM;AACrB,QAAA,MAAI,CAACgB,QAAL,CAAc;AAAET,UAAAA,OAAO,EAAE;AAAX,SAAd;AACH,OAFiB,CAAlB;AAGH;;;2CACsB;AACnBP,MAAAA,GAAG,CAACiB,MAAJ,CAAW,KAAKF,OAAhB;AACH;;;6BACQ;AAAA;;AAAA,UACGR,OADH,GACe,KAAKD,KADpB,CACGC,OADH;AAAA,yBAEoE,KAAKG,KAFzE;AAAA,UAEGQ,SAFH,gBAEGA,SAFH;AAAA,UAEcC,QAFd,gBAEcA,QAFd;AAAA,UAEwBC,mBAFxB,gBAEwBA,mBAFxB;AAAA,UAE6CC,IAF7C,gBAE6CA,IAF7C;AAAA,UAEmDV,YAFnD,gBAEmDA,YAFnD;AAGL,aAAQ,oBAAC,OAAD;AAAS,QAAA,SAAS,EAAC,IAAnB;AAAwB,QAAA,cAAc,EAAE;AAAEQ,UAAAA,QAAQ,EAARA;AAAF,SAAxC;AAAsD,QAAA,SAAS,YAAKD,SAAL,aAA/D;AAAyF,QAAA,cAAc,EAAEX,OAAO,aAAMW,SAAN,+BAA2C,EAA3J;AAA+J,QAAA,eAAe,EAAE;AAAhL,SACPE,mBAAmB,CAACE,GAApB,CAAwB,gBAAwC;AAAA,YAArCC,UAAqC,QAArCA,UAAqC;AAAA,YAAzBC,YAAyB,QAAzBA,YAAyB;AAAA,YAAXf,IAAW,QAAXA,IAAW;AAAA,YACrDgB,QADqD,GACxChB,IADwC,CACrDgB,QADqD;AAE7D,YAAMb,OAAO,GAAGD,YAAY,CAACE,OAAb,CAAqBJ,IAAI,CAACK,GAA1B,KAAkC,CAAlD;AACA,eAAQ,oBAAC,QAAD;AAAU,UAAA,QAAQ,EAAEW,QAApB;AAA8B,UAAA,GAAG,EAAEhB,IAAI,CAACK,GAAxC;AAA6C,UAAA,IAAI,EAAEL,IAAnD;AAAyD,UAAA,IAAI,EAAEY,IAA/D;AAAqE,UAAA,YAAY,EAAEG,YAAnF;AAAiG,UAAA,UAAU,EAAED,UAA7G;AAAyH,UAAA,OAAO,EAAEX,OAAlI;AAA2I,UAAA,SAAS,EAAEM,SAAtJ;AAAiK,UAAA,OAAO,EAAE,MAAI,CAACV;AAA/K,UAAR;AACH,OAJA,CADO,CAAR;AAOH;;;;EA9BkBV,KAAK,CAAC4B,S;;AAgC7B,gBAAe,UAAChB,KAAD;AAAA,SAAW,oBAAC,QAAD,EAAcA,KAAd,CAAX;AAAA,CAAf","sourcesContent":["import * as React from 'react';\nimport Animate from 'rc-animate';\nimport raf from '../_util/raf';\nimport { tuple } from '../_util/type';\nimport ListItem from './ListItem';\nexport const OmitProps = tuple('handleFilter', 'handleSelect', 'handleSelectAll', 'handleClear', 'body', 'checkedKeys');\nclass ListBody extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.state = {\n            mounted: false,\n        };\n        this.onItemSelect = (item) => {\n            const { onItemSelect, selectedKeys } = this.props;\n            const checked = selectedKeys.indexOf(item.key) >= 0;\n            onItemSelect(item.key, !checked);\n        };\n    }\n    componentDidMount() {\n        this.mountId = raf(() => {\n            this.setState({ mounted: true });\n        });\n    }\n    componentWillUnmount() {\n        raf.cancel(this.mountId);\n    }\n    render() {\n        const { mounted } = this.state;\n        const { prefixCls, onScroll, filteredRenderItems, lazy, selectedKeys } = this.props;\n        return (<Animate component=\"ul\" componentProps={{ onScroll }} className={`${prefixCls}-content`} transitionName={mounted ? `${prefixCls}-content-item-highlight` : ''} transitionLeave={false}>\n        {filteredRenderItems.map(({ renderedEl, renderedText, item }) => {\n            const { disabled } = item;\n            const checked = selectedKeys.indexOf(item.key) >= 0;\n            return (<ListItem disabled={disabled} key={item.key} item={item} lazy={lazy} renderedText={renderedText} renderedEl={renderedEl} checked={checked} prefixCls={prefixCls} onClick={this.onItemSelect}/>);\n        })}\n      </Animate>);\n    }\n}\nexport default (props) => <ListBody {...props}/>;\n"],"file":"renderListBody.js"}