{"version":3,"sources":["statistic/utils.jsx"],"names":["moment","padStart","interopDefault","timeUnits","formatTimeStr","duration","format","leftDuration","reduce","current","name","unit","indexOf","value","Math","floor","replace","RegExp","match","len","length","toString","formatCountdown","config","target","valueOf","diff","max"],"mappings":";;;;;;;;AAAA,OAAO,KAAKA,MAAZ,MAAwB,QAAxB;AACA,OAAOC,QAAP,MAAqB,iBAArB;AACA,OAAOC,cAAP,MAA2B,yBAA3B,C,CACA;;AACA,IAAMC,SAAS,GAAG,CACd,CAAC,GAAD,EAAM,OAAO,EAAP,GAAY,EAAZ,GAAiB,EAAjB,GAAsB,GAA5B,CADc,EAEd,CAAC,GAAD,EAAM,OAAO,EAAP,GAAY,EAAZ,GAAiB,EAAjB,GAAsB,EAA5B,CAFc,EAGd,CAAC,GAAD,EAAM,OAAO,EAAP,GAAY,EAAZ,GAAiB,EAAvB,CAHc,EAId,CAAC,GAAD,EAAM,OAAO,EAAP,GAAY,EAAlB,CAJc,EAKd,CAAC,GAAD,EAAM,OAAO,EAAb,CALc,EAMd,CAAC,GAAD,EAAM,IAAN,CANc,EAOd,CAAC,GAAD,EAAM,CAAN,CAPc,CAAlB;;AASA,SAASC,aAAT,CAAuBC,QAAvB,EAAiCC,MAAjC,EAAyC;AACrC,MAAIC,YAAY,GAAGF,QAAnB;AACA,SAAOF,SAAS,CAACK,MAAV,CAAiB,UAACC,OAAD,QAA2B;AAAA;AAAA,QAAhBC,IAAgB;AAAA,QAAVC,IAAU;;AAC/C,QAAIF,OAAO,CAACG,OAAR,CAAgBF,IAAhB,MAA0B,CAAC,CAA/B,EAAkC;AAC9B,UAAMG,KAAK,GAAGC,IAAI,CAACC,KAAL,CAAWR,YAAY,GAAGI,IAA1B,CAAd;AACAJ,MAAAA,YAAY,IAAIM,KAAK,GAAGF,IAAxB;AACA,aAAOF,OAAO,CAACO,OAAR,CAAgB,IAAIC,MAAJ,WAAcP,IAAd,QAAuB,GAAvB,CAAhB,EAA6C,UAACQ,KAAD,EAAW;AAC3D,YAAMC,GAAG,GAAGD,KAAK,CAACE,MAAlB;AACA,eAAOnB,QAAQ,CAACY,KAAK,CAACQ,QAAN,EAAD,EAAmBF,GAAnB,EAAwB,GAAxB,CAAf;AACH,OAHM,CAAP;AAIH;;AACD,WAAOV,OAAP;AACH,GAVM,EAUJH,MAVI,CAAP;AAWH;;AACD,OAAO,SAASgB,eAAT,CAAyBT,KAAzB,EAAgCU,MAAhC,EAAwC;AAAA,uBACnBA,MADmB,CACnCjB,MADmC;AAAA,MACnCA,MADmC,+BAC1B,EAD0B;AAE3C,MAAMkB,MAAM,GAAGtB,cAAc,CAACF,MAAD,CAAd,CAAuBa,KAAvB,EAA8BY,OAA9B,EAAf;AACA,MAAMhB,OAAO,GAAGP,cAAc,CAACF,MAAD,CAAd,GAAyByB,OAAzB,EAAhB;AACA,MAAMC,IAAI,GAAGZ,IAAI,CAACa,GAAL,CAASH,MAAM,GAAGf,OAAlB,EAA2B,CAA3B,CAAb;AACA,SAAOL,aAAa,CAACsB,IAAD,EAAOpB,MAAP,CAApB;AACH","sourcesContent":["import * as moment from 'moment';\nimport padStart from 'lodash/padStart';\nimport interopDefault from '../_util/interopDefault';\n// Countdown\nconst timeUnits = [\n    ['Y', 1000 * 60 * 60 * 24 * 365],\n    ['M', 1000 * 60 * 60 * 24 * 30],\n    ['D', 1000 * 60 * 60 * 24],\n    ['H', 1000 * 60 * 60],\n    ['m', 1000 * 60],\n    ['s', 1000],\n    ['S', 1],\n];\nfunction formatTimeStr(duration, format) {\n    let leftDuration = duration;\n    return timeUnits.reduce((current, [name, unit]) => {\n        if (current.indexOf(name) !== -1) {\n            const value = Math.floor(leftDuration / unit);\n            leftDuration -= value * unit;\n            return current.replace(new RegExp(`${name}+`, 'g'), (match) => {\n                const len = match.length;\n                return padStart(value.toString(), len, '0');\n            });\n        }\n        return current;\n    }, format);\n}\nexport function formatCountdown(value, config) {\n    const { format = '' } = config;\n    const target = interopDefault(moment)(value).valueOf();\n    const current = interopDefault(moment)().valueOf();\n    const diff = Math.max(target - current, 0);\n    return formatTimeStr(diff, format);\n}\n"],"file":"utils.js"}